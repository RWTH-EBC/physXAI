name: Verify Executables

on:
  pull_request:
    branches:
    - main

  workflow_dispatch:

jobs:

  setup:
    runs-on: ubuntu-latest
    outputs:
      scripts: ${{ steps.filter_files.outputs.filtered_json }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha || '' }}
          fetch-depth: 0

      - name: Get changed Python files
        if: github.event_name == 'pull_request'
        id: get_changed_files
        uses: tj-actions/changed-files@ed68ef82c095e0d48ec87eccea555d944a631a4c
        with:
          json: true
          base_sha: ${{ github.event.pull_request.base.sha }}

      - name: Get all Python files (Manual Run)
        if: github.event_name == 'workflow_dispatch'
        id: get_all_files
        run: |
          echo "Manual trigger detected. Finding all python scripts in executables/..."
          scripts_list=$(find executables -type f -name "*.py" 2>/dev/null || true)
          
          if [ -z "$scripts_list" ]; then
            echo "No python scripts found. Setting output to an empty JSON array."
            echo "scripts_json=[]" >> $GITHUB_OUTPUT
          else
            echo "Found scripts. Formatting as a JSON array."
            echo "scripts_json=$(echo "$scripts_list" | jq --compact-output --raw-input --slurp 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT
          fi

      - name: Filter Python files in executables directory
        id: filter_files
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            # Get all changed files from the previous step
            ALL_FILES='${{ steps.get_changed_files.outputs.all_changed_files }}'
            echo "All changed files: $ALL_FILES"
            
            # Filter for Python files in executables directory
            # Remove the escaped quotes and parse with jq
            FILTERED_JSON=$(echo "$ALL_FILES" | sed 's/\\"/"/g' | jq -c '[.[] | select(test("^executables/.*\\.py$"))]')
            echo "Filtered Python files in executables: $FILTERED_JSON"
            echo "filtered_json=$FILTERED_JSON" >> $GITHUB_OUTPUT
          else
            # For manual runs, use the already filtered list
            FILTERED_JSON='${{ steps.get_all_files.outputs.scripts_json }}'
            echo "Manual run - using all Python files: $FILTERED_JSON"
            echo "filtered_json=$FILTERED_JSON" >> $GITHUB_OUTPUT
          fi
          
      - name: Save files JSON to artifact for debugging
        if: always()
        run: |
          JSON_OUTPUT='${{ steps.filter_files.outputs.filtered_json }}'
          echo "Final JSON for downstream jobs: $JSON_OUTPUT"
          echo "$JSON_OUTPUT" > changed_files.json
          
      - name: Upload JSON artifact
        uses: actions/upload-artifact@v4
        with:
          name: changed-python-files
          path: changed_files.json
          retention-days: 30

  run-scripts:
    needs: setup
    if: needs.setup.outputs.scripts != '[]' && needs.setup.outputs.scripts != ''
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        script: ${{ fromJSON(needs.setup.outputs.scripts) }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.12
      uses: actions/setup-python@v5
      with:
        python-version: '3.12'
        
    - name: Install requirements and add python path
      run: |
        python -m pip install --upgrade pip
        pip install .
        
    - name: Run script -> ${{ matrix.script }}
      run: |
        python ${{ matrix.script }}